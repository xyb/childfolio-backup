dist: trusty
sudo: false

language: c

cache:
  directories:
    - "$HOME/.nimble"
    - "$HOME/.choosenim"

matrix:
  fast_finish: true
  include:
    - os: osx
      compiler: clang
      env:
          BUILD=osx
          CHANNEL=stable
          CROSS=""

    #- os: linux
    #  env:
    #      BUILD=linux
    #      CHANNEL=stable
    #      CROSS=""

    #- os: linux
    #  addons:
    #    apt:
    #      sources:
    #        - ubuntu-toolchain-r-test
    #      packages:
    #        # For cross-compiling to Windows.
    #        - binutils-mingw-w64-i686
    #        - binutils-mingw-w64-x86-64
    #        - gcc-mingw-w64-i686
    #        - gcc-mingw-w64-x86-64
    #        - g++-mingw-w64-i686
    #        - g++-mingw-w64-x86-64
    #        - mingw-w64
    #  env:
    #      BUILD=windows
    #      CHANNEL=stable
    #      CROSS="-d:crosswin"

install:
  - |
      curl https://nim-lang.org/choosenim/init.sh -sSf > init.sh
      sh init.sh -y

before_script:
  - export CHOOSENIM_NO_ANALYTICS=1
  - export PATH=$HOME/.nimble/bin:$PATH
  - echo "export PATH=~/.nimble/bin:$PATH" >> ~/.profile
  - yes | choosenim $CHANNEL
  - nimble install -y
  - if [ $TRAVIS_OS_NAME == linux -a $BUILD == windows ]; then export CC=x86_64-w64-mingw32-gcc; fi
  # pcre64.dll/pcre32.dll must be distributed with the Windows executable
  - if [ $TRAVIS_OS_NAME == linux -a $BUILD == windows ]; then curl -O https://nim-lang.org/download/dlls.zip; unzip dlls.zip; fi

script:
  # - nimble test
  - mkdir -p dist
  - nimble build -y -d:release $CROSS
  - if [ $TRAVIS_OS_NAME == linux -a $BUILD == windows ]; then export GITHUB_RELEASE_FILENAME="./dist/childfolio-$BUILD-amd64.zip"; else export GITHUB_RELEASE_FILENAME="./dist/childfolio-$BUILD-amd64.tgz"; fi
  - if [ $TRAVIS_OS_NAME == linux -a $BUILD == windows ]; then strip childfolio pcre64.dll; else strip childfolio; fi
  - mkdir -p childfolio-$BUILD-amd64
  - cp childfolio childfolio-$BUILD-amd64
  - if [ $TRAVIS_OS_NAME == linux -a $BUILD == windows ]; then cp pcre64.dll childfolio-$BUILD-amd64; fi
  - if [ $TRAVIS_OS_NAME == linux -a $BUILD == windows ]; then zip -r9 $GITHUB_RELEASE_FILENAME childfolio-$BUILD-amd64; else tar cfz $GITHUB_RELEASE_FILENAME childfolio-$BUILD-amd64; fi
  - ls -al ./dist

deploy:
  provider: releases
  api_key:
    secure: "PQUmHSMB1nJAr5wLJWrMD5gUP50sUELxVMEK+yhV3tyfJHf5J7oUoGGCe7Mn+9A/ciujWNkN6wVbRUNWJTvfyrYAeDE5Zc1rv51NbfnuMzthJYuAvvTpViLfhS/9QtFY9wL2teCoExa4/vFgMRCaIPD3ja25bLJLygTUaDozuFoaLlecd5Dd98YIC4d2H6jh6I4Chbmy3cod9i71ij3/10KgPJm8RXkvfDxUSttxax/OENQ5lTbRnez48Pw7+RLHHcMC4D5tRlZ2MzFotEtkPu3n0NtKVfkcYsH5WBVKZbsJQUK8WyoM05qy4khXtLN/wSBmVll/7UlhU0laZwuE4A3yEBG2XjlkAzD50F76YognG/Tz7Al1ru10q20iOqNh4tHrkueKHay9PzXlc7Ngbm9DOj8dgBShVPd+8a98yvxuC91ybS7CsJXGpMjFoxLCO9dtGFZkO0c4vh/1wFhLHZac+G15h8GPsPkS9i2vW364QCGTLChIY6prRqrl50B2lW6slXxpHMDCgpwc9Bb15k6FubhN3XZ1WDRNrnbT7sXoXDpDcIFJ6FyqRWGuj68NBUwjc+2bvdJ+p/Jq69g7jsmqbxpJkKIFNJWTS+vftLl1hkPHClltCpF1VtEkZAyM2PrirMRTFYlmeJFYWoia0RwT+YqDX/N3RZIxedRE9tE="
  file_glob: true
  file: dist/*
  skip_cleanup: true
  draft: false
  on:
    repo: xyb/childfolio-backup
    tags: true
    branch: master
    # all_branches: true
